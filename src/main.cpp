/***********************************************************************************
* Данный файл записывает изображение в формате P3, т.е. цвета даны в ASCII - 24 бита 
* на пиксель (по 8 бит на r,g,b). 
* 
* Выходной файл ((>) file.ppm) содержит значения для пикселя в количестве 256 x 256, 
* значения которых не превышают 255.
*
* Файл .ppm является простым форматом хранения цветного изображения. Также может 
* быть использован в качестве промежуточного формата при конвертации растровых 
* изображений. 
* 
* Внутренне представление, по соглашени. r,g,b компонентов должно находиться в 
* диапазоне [0;1].
* 
* Т.е. для каждого компонента конкретного пикселя определяется степень 
  принадлежности конкретного компонента (r,g,b) к конкретному цвету.
*
* cmake --build . --config release
***********************************************************************************/

#include "vec3.h"
#include "color.h"
#include <iostream>

#define IMAGE_WIDTH 256
#define IMAGE_HEIGHT 256

int main()
{
	std::ios_base::sync_with_stdio(0);
	/* render */
	std::cout << "P3\n" << IMAGE_WIDTH << ' ' << IMAGE_HEIGHT << "\n255\n";
	for (int j = 0; j < IMAGE_HEIGHT; ++j) {
		std::clog << "\rScanlines remaining: " << (IMAGE_HEIGHT - j) << ' ' << std::flush;
		for (int i = 0; i < IMAGE_WIDTH; ++i) {
			double r = double(i) / (255);
			double g = double(j) / (255);
			double b = 0.0;

			color pix_color(r,g,b);
			write_color(std::cout, pix_color);
		}
	}
	std::clog << "\rDone.                 \n";
}